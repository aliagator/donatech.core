@model Donatech.Core.ViewModels.ContactoViewModel
@{
    Layout = "_Layout";
}

@section CustomCss {
    <style>
        img {
            max-width: 100%;
        }

        .inbox_people {
            background: #f8f8f8 none repeat scroll 0 0;
            float: left;
            overflow: hidden;
            width: 40%;
            border-right: 1px solid #c4c4c4;
        }

        .inbox_msg {
            border: 1px solid #c4c4c4;
            clear: both;
            overflow: hidden;
        }

        .top_spac {
            margin: 20px 0 0;
        }

        .recent_heading {
            float: left;
            width: 40%;
        }

        .headind_srch {
            padding: 10px 29px 10px 20px;
            overflow: hidden;
            border-bottom: 1px solid #c4c4c4;
        }

        .recent_heading h4 {
            color: #05728f;
            font-size: 21px;
            margin: auto;
        }

        .srch_bar input {
            border: 1px solid #cdcdcd;
            border-width: 0 0 1px 0;
            width: 80%;
            padding: 2px 0 4px 6px;
            background: none;
        }

        .srch_bar .input-group-addon button {
            background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
            border: medium none;
            padding: 0;
            color: #707070;
            font-size: 18px;
        }

        .srch_bar .input-group-addon {
            margin: 0 0 0 -27px;
        }

        .chat_ib h5 {
            font-size: 15px;
            color: #464646;
            margin: 0 0 8px 0;
        }

            .chat_ib h5 span {
                font-size: 13px;
                float: right;
            }

        .chat_ib p {
            font-size: 14px;
            color: #989898;
            margin: auto
        }

        .chat_img {
            float: left;
            width: 11%;
        }

        .chat_ib {
            float: left;
            padding: 0 0 0 15px;
            width: 88%;
        }

        .chat_people {
            overflow: hidden;
            clear: both;
        }

        .chat_list {
            border-bottom: 1px solid #c4c4c4;
            margin: 0;
            padding: 18px 16px 10px;
        }

        .inbox_chat {
            height: 550px;
            overflow-y: scroll;
        }

        .active_chat {
            background: #ebebeb;
        }

        .incoming_msg_img {
            display: inline-block;
            width: 6%;
        }

        .received_msg {
            display: inline-block;
            padding: 0 0 0 10px;
            vertical-align: top;
            width: 92%;
        }

        .received_withd_msg p {
            background: #ebebeb none repeat scroll 0 0;
            border-radius: 3px;
            color: #646464;
            font-size: 14px;
            margin: 0;
            padding: 5px 10px 5px 12px;
            width: 100%;
        }

        .time_date {
            color: #747474;
            display: block;
            font-size: 12px;
            margin: 8px 0 0;
        }

        .received_withd_msg {
            width: 57%;
        }

        .mesgs {
            float: left;
            padding: 30px 15px 0 25px;
            width: 100%;
        }

        .sent_msg p {
            background: #05728f none repeat scroll 0 0;
            border-radius: 3px;
            font-size: 14px;
            margin: 0;
            color: #fff;
            padding: 5px 10px 5px 12px;
            width: 100%;
        }

        .outgoing_msg {
            overflow: hidden;
            margin: 26px 0 26px;
        }

        .sent_msg {
            float: right;
            width: 46%;
        }

        .input_msg_write input {
            background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
            border: medium none;
            color: #4c4c4c;
            font-size: 15px;
            min-height: 48px;
            width: 100%;
        }

        .type_msg {
            border-top: 1px solid #c4c4c4;
            position: relative;
        }

        .msg_send_btn {
            background: #05728f none repeat scroll 0 0;
            border: medium none;
            border-radius: 50%;
            color: #fff;
            cursor: pointer;
            font-size: 17px;
            height: 33px;
            position: absolute;
            right: 0;
            top: 11px;
            width: 33px;
        }

        .messaging {
            padding: 0 0 50px 0;
        }

        .msg_history {
            height: 516px;
            overflow-y: auto;
        }

        #collapseExample{
            margin-bottom: 20px;
        }
    </style>
}

@section Scripts {
    <script>
        const volverAction = () => {
            history.back()
        }

        const enviarMensaje = () => {            
            const idProducto = parseInt('@Context.Request.Query["idProducto"]')
            const idUsuario = parseInt('@Context.Request.Query["idUsuario"]')

            const message = {
                Mensaje: $("#txtMessage").val(),
                IdProducto: idProducto,
                IdReceptor: idUsuario
            }

            fetch('/Contacto/InsertMessage',
                {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(message)
                })
                .then(response => response.json())
                .then(() => {
                    loadMessages()
                    $("#txtMessage").val('')
                })
                .catch(error => {
                    showAlertMessage('Danger', 'Error al ingresar el mensaje')
                })
        }

        const loadMessages = () => {
            fetch(`/Contacto/MensajesList?idUsuario=${idUsuario}&idProducto=${idProducto}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                })
                .catch(error => {
                    showAlertMessage('Danger', 'Error al intentar obtener la lista de mensajes')
                })
        }

        const initPage = () => {
            if ($('#validation > .validation-summary-valid > ul > li').html() == "") {
                $('#validation').hide()
            } else {
                $('#validation').show()
            }
        }

        jQuery(document).ready(() => {
            initPage()
        })
    </script>
}


<div class="container" style="margin-bottom: 50px">
    <div id="alertInfoMessage" class="alert alert-info" role="alert" style="display:none">
        &nbsp;
    </div>
    <div id="alertErrorMessage" class="alert alert-danger" role="alert" style="display:none">
        &nbsp;
    </div>

    <div class="col" style="text-align:center">
        <div asp-validation-summary="All" id="validation" class="alert alert-info text-justify" role="alert">          
            @Html.ValidationSummary()
        </div>
    </div>

    <br />
    <div class="card mb-3">
        <div class="card-body">
            <h5 class="card-title">
                Informaci&oacute;n de Contacto
            </h5>
            <p class="card-text">
                @Model.InfoContacto?.NombreCompleto
            </p>
            <hr />
            <p class="card-text">
                <small class="text-muted">Email: @Model.InfoContacto?.Email</small>
            </p>
            <p class="card-text">
                <small class="text-muted">Celular: @Model.InfoContacto?.Celular</small>
            </p>
            <p class="card-text">
                <small class="text-muted">Direcci&oacute;n: @Model.InfoContacto?.Direccion</small>
            </p>
        </div>
    </div>

    <p>
        <a class="btn btn-info" id="btnVerMensajes" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
            Ver Mensajes
        </a>
    </p>

    <div class="collapse" id="collapseExample">
        <div class="card card-body">
            <div class="messaging">
                <div class="inbox_msg">
                    <div class="mesgs">
                        <div class="msg_history">
                            @{
                                if (Model.MensajesList == null)
                                    return;

                                foreach (var item in Model.MensajesList)
                                {
                                    <div class='@(item.SesionEmisor ? "outgoing_msg" : "incoming_msg")'>
                                        <div style='@(item.SesionEmisor ? "display:none" : "")' class="incoming_msg_img">
                                            <img src="~/images/user-profile-03.png" alt="user">
                                        </div>
                                        <div class='@(item.SesionEmisor ? "sent_msg" : "received_msg")'>
                                            <div class="received_withd_msg" style='@(item.SesionEmisor ? "display:none" : "")'>
                                                <p>@item.Mensaje</p>
                                                <span class="time_date">
                                                    @item.FchEnvio.ToString("HH:mm tt")    |
                                                    @item.FchEnvio.ToString("MMMM dd, yyyy")
                                                </span>
                                            </div>

                                            <p style='@(item.SesionEmisor == false ? "display:none" : "")'>@item.Mensaje</p>
                                            <span class="time_date" style='@(item.SesionEmisor == false ? "display:none" : "")'>
                                                @item.FchEnvio.ToString("HH:mm tt")    |
                                                @item.FchEnvio.ToString("MMMM dd, yyyy")
                                            </span>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="type_msg">
                            <div class="input_msg_write">
                                <input type="text" class="write_msg" placeholder="Escriba un mensaje" id="txtMessage" name="txtMessage" />
                                <button class="msg_send_btn" type="button" id="btnSendMessage" onclick="enviarMensaje()">
                                    <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.ActionLink("Volver", "Index", "Home", null, new { @class = "btn btn-secondary" })        
    </div>
</div>